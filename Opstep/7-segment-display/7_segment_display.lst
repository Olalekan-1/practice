CCS PCM C Compiler, Version 5.015, 5967               09-May-25 12:41

               Filename:   C:\Users\Ahmed Olalekan\Desktop\practice\Opstep\7-segment-display\7_segment_display.lst

               ROM used:   37 words (4%)
                           Largest free fragment is 987
               RAM used:   4 (6%) at main() level
                           5 (7%) worst case
               Stack used: 0 locations
               Stack size: 8

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   004
0003:  NOP
.................... #include <7_segment_display.h> 
.................... #include <16F84A.h> 
.................... //////////// Standard Header file for the PIC16F84A device //////////////// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996, 2013 Custom Computer Services          //// 
.................... //// This source code may only be used by licensed users of the CCS C  //// 
.................... //// compiler.  This source code may only be distributed to other      //// 
.................... //// licensed users of the CCS C compiler.  No other use, reproduction //// 
.................... //// or distribution is permitted without written permission.          //// 
.................... //// Derivative programs created using this software in object code    //// 
.................... //// form are not restricted in any way.                               //// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... #device PIC16F84A 
....................  
.................... #list 
....................  
....................  
.................... #FUSES XT,NOWDT,PUT,PROTECT 
....................  
.................... #use delay(crystal=4000000) 
....................  
....................  
....................  
.................... void main() 
0004:  MOVF   03,W
0005:  ANDLW  1F
0006:  MOVWF  03
.................... { 
....................  
....................    output_a(0); 
0007:  BSF    03.5
0008:  CLRF   05
0009:  BCF    03.5
000A:  CLRF   05
....................    output_b(0); 
000B:  BSF    03.5
000C:  CLRF   06
000D:  BCF    03.5
000E:  CLRF   06
....................    set_tris_a(0b01111); 
000F:  MOVLW  0F
0010:  BSF    03.5
0011:  MOVWF  05
....................    set_tris_b(0b00000000); 
0012:  MOVLW  00
0013:  MOVWF  06
....................    // output_a(0); 
....................    // output_b(0); 
....................     
....................    unsigned int8 sensor_data; 
....................  
....................    while(TRUE) 
....................    {  
....................       sensor_data = input_a(); 
0014:  MOVLW  FF
0015:  MOVWF  05
0016:  BCF    03.5
0017:  MOVF   05,W
0018:  MOVWF  11
....................       if ( sensor_data == 9){ 
0019:  MOVF   11,W
001A:  SUBLW  09
001B:  BTFSS  03.2
001C:  GOTO   022
....................          output_b(0b00000010); 
001D:  BSF    03.5
001E:  CLRF   06
001F:  MOVLW  02
0020:  BCF    03.5
0021:  MOVWF  06
....................          //delay_ms(1000); 
....................          //output_b(0b00000000); 
....................          //delay_ms(1000); 
....................       } 
0022:  BSF    03.5
0023:  GOTO   014
....................        
....................      
....................    } 
....................  
.................... } 
0024:  SLEEP

Configuration Fuses:
   Word  1: 0001   XT NOWDT PUT PROTECT
